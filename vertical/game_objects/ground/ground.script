local u = require "vertical.assets.utils"
local c = require "vertical.assets.const"

local pieces = { "background", "background1", "background2", "background3", "background4",  "background5" }
local animations = { "road_desert_clean_A", "road_desert_clean_B", "road_desert_clean_C", "road_desert_clean_D", "road_desert_cracs_A", "road_desert_cracs_B" }
local screen_height

go.property("speed", 6)

function init(self)
	-- self.ground_height != ground_height
	screen_height = sys.get_config("display.height")	
	self.speed = u.get(c.prop.speed)
end

local function print_debug(i, p, pos)
	-- http://www.defold.com/manuals/debugging/#_visual_profiler
	local position = vmath.vector3(200, 200 + i*15, 0)
	local message = {text = p .. ".pos.y: " .. pos.y, position = position}
	msg.post("@render:", "draw_text", message)
end

function update(self, dt)
	-- u.debug("ground.speed = " .. self.speed, 200, 200)
	for i, piece in ipairs(pieces) do 
		u.set_id_position(piece, function(pos)
			if pos.y <= -screen_height then
				pos.y = math.floor(9600 + screen_height + pos.y)
				u.set_random_animation(piece, animations)
				msg.post(c.msg.recv.controller, c.msg.add_point)
			end
			pos.y = math.floor(pos.y - self.speed)
			-- print_debug(i, p, pos)
		end)
	end
end

function on_message(self, message_id, message, sender)
	if u.is_id(message_id, c.msg.set_speed) then
		self.speed = message.speed
	elseif u.is_id(message_id, c.msg.add_speed) then
		self.speed = self.speed + message.speed
	end
end