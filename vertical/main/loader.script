-- todo: move acquire_input_focus, release_input_focus to module

local function load_proxy(name)
  msg.post("#" .. name, "load")
end

local function load_level()
	load_proxy("level")
end

local function unload_proxy(proxy_name)
	local proxy = "#" .. proxy_name
	msg.post(proxy, "disable")
	msg.post(proxy, "final")
	msg.post(proxy, "unload")
end

local is_game_over = false
local is_restart = false

function init(self)
	print("loader.init")
	msg.post(".", "acquire_input_focus")
	load_proxy("main_menu")
end

function final(self)
	print("loader.final")
	msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)
	-- print("loader.on_message")
	print("message_id = " .. message_id)
	pprint(sender)
  
  -- local dbg = require "builtins.scripts.mobdebug"
  -- dbg.start()
	
  if message_id == hash("start_game") then
		load_level()
		unload_proxy("main_menu")
  elseif message_id == hash("credits") then
    load_proxy("credits")
    unload_proxy("main_menu")
  elseif message_id == hash("main_menu") then
    unload_proxy("game_over")
    is_main_menu = true
  elseif message_id == hash("main_menu_from_credits") then
    unload_proxy("credits")
    is_main_menu = true
  elseif message_id == hash("game_over") then
		unload_proxy("level")
    load_proxy("game_over")
	elseif message_id == hash("reload_level") then
		unload_proxy("level")
    is_restart = true
  elseif message_id == hash("restart") then
		unload_proxy("game_over")
    is_restart = true
	elseif message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")
	elseif message_id == hash("proxy_unloaded") then
		-- print(sender.socket) --> 786443 (internal numeric value)
		-- print(sender.path) --> hash: [/hearttree/tree]
		-- print(sender.fragment) --> hash: [script]
    if is_restart then
			load_level()
      is_restart = false
		elseif is_main_menu then
      load_proxy("main_menu")
      is_main_menu = false
    end
	end
end
