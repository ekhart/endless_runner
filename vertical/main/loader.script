-- todo: move acquire_input_focus, release_input_focus to module

local function load_level()
	msg.post("#level", "load")
end

local function unload_proxy(proxy_name)
	local proxy = "#" .. proxy_name
	msg.post(proxy, "disable")
	msg.post(proxy, "final")
	msg.post(proxy, "unload")
end

function init(self)
	print("loader.init")
	msg.post(".", "acquire_input_focus")
	msg.post("#hud", "load")
end

function final(self)
	print("loader.final")
	msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)
	-- print("loader.on_message")
	-- print("message_id = " .. message_id)
	-- print("sender = ")
	-- pprint(sender)
	if message_id == hash("start_game") then
		load_level()
		unload_proxy("hud")
	elseif message_id == hash("reload_level") then
		unload_proxy("level")
	elseif message_id == hash("proxy_loaded") then
		msg.post(sender, "enable")
	elseif message_id == hash("proxy_unloaded") then
		-- print(sender.socket) --> 786443 (internal numeric value)
		-- print(sender.path) --> hash: [/hearttree/tree]
		-- print(sender.fragment) --> hash: [script]
		if sender.fragment == hash("level") then
			load_level()
		end
	end
end
