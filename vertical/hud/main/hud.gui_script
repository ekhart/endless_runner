function init(self)
  print("main.hud.init")
  msg.post(".", "acquire_input_focus")
end

function final(self)
  print("main.hud.final")
  msg.post(".", "release_input_focus")
end

local function is_id(id, to_hash)
  return id == hash(to_hash)
end

local function handle_input(action)
  local x = action.x
  local y = action.y

  local start_game = gui.get_node("start_game")
  local credits = gui.get_node("credits")
  local exit_game = gui.get_node("exit_game")
  
  if gui.pick_node(start_game, x, y) then
    msg.post("main:/loader", "start_game")
  elseif gui.pick_node(credits, x, y) then
    msg.post("main:/loader", "credits")
  elseif gui.pick_node(exit_game, x, y) then
    msg.post("@system:", "exit", {code = 0})
  end
end

function on_input(self, action_id, action)
  local is_mouse_pressed = is_id(action_id, "left_button") and action.pressed 
  local is_touched = is_id(action_id, "touch") and #action.touch > 1

  if is_mouse_pressed then
    handle_input(action)
  elseif is_touched then
    for i, point in ipairs(action.touch) do
      handle_input(action)
    end
  end
end

local function set_node_text(node, text)
	gui.set_text(gui.get_node(node), text)
end

local function get_highest_score()
  local my_file = sys.get_save_file("freeway68", "my_file")
  local my_table = sys.load(my_file)
  if not next(my_table) then
    return 0
  else 
    return my_table[1]
  end
end

function on_message(self, message_id, message, sender)
  if message_id == hash("set_longest_chase") then
    text = string.format("Longest chase: %.2f miles", get_highest_score())
    set_node_text("longest_chase", text)
  end
end