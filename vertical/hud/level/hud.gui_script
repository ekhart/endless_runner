-- todo: move to module
local function post_current(message_id)	
	msg.post(".", message_id)
end

local function is_id(id, to_hash)
	return id == hash(to_hash)
end


function init(self)
	print("hud.init")
	msg.post(".", "acquire_input_focus")
	-- post_current("acquire_input_focus")
end

function final(self)
  print("hud.final")
	msg.post(".", "release_input_focus")
	-- post_current("release_input_focus")
end

local function set_node_text(node, text)
	gui.set_text(gui.get_node(node), text)
end

local function set_time(message)
	-- print("hud.set_time = " .. message.time)
	set_node_text("time", string.format( "%.2f", message.time))
end

local function set_points(message)
	set_node_text("points", message.points)
end

function on_message(self, message_id, message, sender)
	-- print("hud.on_message")
	if is_id(message_id, "set_time") then
		set_time(message)
	elseif is_id(message_id, "set_points") then
		set_points(message)
	end
end

function on_input(self, action_id, action)
	-- print("hud.on_input actionid: " .. action_id)
	local is_mouse_pressed = is_id(action_id, "left_button") and action.pressed 
	local is_touched = is_id(action_id, "touch") and #action.touch > 1
	local restart = gui.get_node("restart")

  if is_mouse_pressed then
		print("left_button")
		
		local x = action.x
		local y = action.y
		
		-- Get the nodes and see if we have pressed any.
		if gui.pick_node(restart, x, y) then
			print("THE GAME WILL RESTART...")
			msg.post("main:/loader", "reload_level")

		-- elseif gui.pick_node(resumenode, x, y) then
		--         -- Resume the game...
		--         -- First, hide the pause menu.
		--         local node = gui.get_node("background")
		--         gui.set_enabled(node, false)
		
		--         -- Finally, release input.
		--         msg.post(".", "release_input_focus")
		end
  elseif is_touched then
  	print("touch")

		for i, point in ipairs(action.touch) do
			if gui.pick_node(restart, point.x, point.y) then
				print("THE GAME WILL RESTART...")
			end
		end
	end

  -- As long as we're listening to input, we're gonna consume it.
  -- This disables game controls while the pause menu is showing.
  -- return true
end